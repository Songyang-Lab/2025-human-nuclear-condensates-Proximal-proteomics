IK=bait_matrix[29],
SNB=bait_matrix[30],
PML_NB=bait_matrix[31:34],
HET=bait_matrix[35:36],
TEC=bait_matrix[37],
NPC=bait_matrix[38],
NL=bait_matrix[39:40],
S68B=bait_matrix[41])
for (i in 1:length(NC_list)) {
NC_list[[i]]$total<-rowSums(NC_list[[i]])/ncol(NC_list[[i]])
names(NC_list[[i]])[ncol(NC_list[[i]])]<-names(NC_list)[i]
NC_list[[i]]<-NC_list[[i]][ncol(NC_list[[i]])]
}
NC_crosstalk<-data.frame(list=names(NC_list))
rownames(NC_crosstalk)<-names(NC_list)
for (i in 1:length(NC_list)) {
a<-c(NC_list[[i]][1,1],
NC_list[[i]][2,1],
sum(NC_list[[i]][6:7,1])/2,
sum(NC_list[[i]][3:5,1])/3,
sum(NC_list[[i]][8:11,1])/4,
sum(NC_list[[i]][12:16,1])/5,
NC_list[[i]][17,1],
NC_list[[i]][18,1],
sum(NC_list[[i]][19:20,1])/2,
sum(NC_list[[i]][21:24,1])/4,
NC_list[[i]][25,1],
sum(NC_list[[i]][26:28,1])/3,
NC_list[[i]][29,1],
NC_list[[i]][30,1],
sum(NC_list[[i]][31:34,1])/4,
sum(NC_list[[i]][35:36,1])/2,
NC_matrix[[i]][37,1],
NC_matrix[[i]][38,1],
sum(NC_list[[i]][39:40,1])/2,
NC_list[[i]][41,1])
NC_crosstalk<-data.frame(NC_crosstalk,a)
names(NC_crosstalk)[i+1]<-names(NC_list)[i]
}
normalize<-function(x){
for (i in 1:ncol(x)) {
x[,i]<-x[,i]*min(1/x[,i])
}
test<-x
a<-1
while(a<= ncol(x)){
for (b in 1:nrow(x)) {
test[b,a]<-mean(x[b,a]+x[a,b])
}
a=a+1
}
corrplot(test,tl.cex = 1.2, col = COL1('Purples'),na.label = "square",method = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
}
n<-normalize(n)
base_cross_matrix<-n$corr
n<-as.matrix(base_cross_matrix)
col=colorRampPalette(c("white","Medium Turquoise","#6181e3"))
col=colorRampPalette(c("white","#7da9f0","#4e26b4"))
corrplot(n,tl.cex = 1.2, col = col(200),na.label = "square",method = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F, type = 'upper',diag = FALSE,
col.lim = c(0,1))
n<-normalize(n)
View(NC_crosstalk)
View(n)
n<-normalize(NC_crosstalk[-1])
View(n)
normalize<-function(x){
for (i in 1:ncol(x)) {
x[,i]<-x[,i]*min(1/x[,i])
}
test<-x
a<-1
while(a<= ncol(x)){
for (b in 1:nrow(x)) {
test[b,a]<-mean(x[b,a]+x[a,b])
}
a=a+1
}
return(test)
}
n<-normalize(NC_crosstalk[-1])
col=colorRampPalette(c("white","#7da9f0","#4e26b4"))
corrplot(n,tl.cex = 1.2, col = col(200),na.label = "square",method = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F, type = 'upper',diag = FALSE,
col.lim = c(0,1))
n<-as.matrix(n)
col=colorRampPalette(c("white","#7da9f0","#4e26b4"))
corrplot(n,tl.cex = 1.2, col = col(200),na.label = "square",method = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F, type = 'upper',diag = FALSE,
col.lim = c(0,1))
n<-normalize(NC_crosstalk[-1])
base_cross_matrix<-n$corr
n<-as.matrix(base_cross_matrix)
View(n)
View(n)
n<-as.matrix(n)
col=colorRampPalette(c("white","#7da9f0","#4e26b4"))
corrplot(n,tl.cex = 1.2, col = col(200),na.label = "square",method = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F, type = 'upper',diag = FALSE,
col.lim = c(0,1))
View(n)
n<-normalize(NC_crosstalk[-1])
View(n)
normalize<-function(x){
for (i in 1:ncol(x)) {
x[,i]<-x[,i]*min(1/x[,i])
}
test<-x
a<-1
while(a<= ncol(x)){
for (b in 1:nrow(x)) {
test[b,a]<-mean(x[b,a]+x[a,b])
}
a=a+1
}
corrplot(test,tl.cex = 1.2, col = COL1('Purples'),na.label = "square",method = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
}
n<-normalize(NC_crosstalk[-1])
n<-as.matrix(NB_crosstalk[-1])
n<-as.matrix(NC_crosstalk[-1])
n<-normalize(n)
n<-normalize(as.matrix(NC_crosstalk[-1]))
n<-as.matrix(n$corr)
col=colorRampPalette(c("white","#7da9f0","#4e26b4"))
corrplot(n,tl.cex = 1.2, col = col(200),na.label = "square",method = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F, type = 'upper',diag = FALSE,
col.lim = c(0,1))
corrplot(n,tl.cex = 0.6, col = col(200),na.label = "square",method = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F, type = 'upper',diag = FALSE,
col.lim = c(0,1))
UK_protein<-read.csv("ESRP1.txt", sep = "\t",  header = TRUE)
UK_protein<-read.csv("ESRP1.txt", sep = "\t",  header = TRUE)
NC_matrix<-read.csv("NC_marker_matrix.txt", sep = "\t",  header = TRUE)
Merg<-function(x){   ###x为列表
a<-x[[1]]
for (i in 2:length(x)) {
a<-merge(a,x[[i]],by=1,all = T)
}
names(a)[1]<-"Majority.protein.IDs"
a[is.na(a)]<-0
return(a)
}
discoPlot<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,colSums(co[,42:ncol(co)]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co,tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
View(UK_protein)
prediction_matrix<-merge(NC_matrix,UK_protein,by=1,all = T)
names(prediction_matrix)[1]<-"Majority.protein.IDs"
prediction_matrix[is.na(prediction_matrix)]<-0
View(prediction_matrix)
discoPlot2<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,colSums(co[,42:ncol(co)]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co,tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
discoPlot2<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,colSums(co[,42]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co,tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
discoPlot2<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
SUM_co<-colSums(co)
b<-c(SUM_co[1:41])-1,SUM_co[,42:length(SUM_co)]))
UK_RA<-discoPlot2(prediction_matrix)
discoPlot2<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,sum(co[,42]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co,tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
discoPlot2<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,sum(co[,42]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co[42],tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
discoPlot2<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,sum(co[,42]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co[,42],tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
discoPlot2<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,sum(co[,42]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
n<-data.frame(co[,42])
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(n,tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
RAcor<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,sum(co[42]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
n<-data.frame(bait=rownames(co),r=co[,42])
library(linkET)
corp<-qcorrplot(n[2],is.corr=F) +
geom_tile(color="grey",size=0.5,fill=NA) +
geom_point(aes(size=r,color=r),stroke=2,fill="black") +
scale_size(range = c(-2,3))+
scale_color_gradient2(low ="white",mid ="orange", high = "firebrick3",midpoint = 0.5)  +
theme(legend.title = element_blank(),legend.position="none",
axis.text.y = element_blank()
)+scale_x_discrete(position = "top")+
guides(fill = F)
return(corp)
}
UK_RA<-RAcor(prediction_matrix)
library(ggheatmap)
install.packages(ggheatmap)
install.packages(linkET)
install.packages("linkET")
install.packages("ggheatmap")
RAcor<-function(x){
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,sum(co[42]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
n<-data.frame(bait=rownames(co),r=co[,42])
library(linkET)
corp<-qcorrplot(n[2],is.corr=F) +
geom_tile(color="grey",size=0.5,fill=NA) +
geom_point(aes(size=r,color=r),stroke=2,fill="black") +
scale_size(range = c(-2,3))+
scale_color_gradient2(low ="white",mid ="orange", high = "firebrick3",midpoint = 0.5)  +
theme(legend.title = element_blank(),legend.position="none",
axis.text.y = element_blank()
)+scale_x_discrete(position = "top")+
guides(fill = F)
return(corp)
}
UK_RA<-RAcor(prediction_matrix)
library(linkET)
UK_protein2<-read.csv("BUD13.txt", sep = "\t",  header = TRUE)
NC_matrix<-read.csv("NC_marker_matrix.txt", sep = "\t",  header = TRUE)
prediction_matrix<-merge(NC_matrix,UK_protein1,by=1,all = T)
UK_protein1<-read.csv("ESRP1.txt", sep = "\t",  header = TRUE)
UK_protein2<-read.csv("BUD13.txt", sep = "\t",  header = TRUE)
NC_matrix<-read.csv("NC_marker_matrix.txt", sep = "\t",  header = TRUE)
prediction_matrix<-merge(NC_matrix,UK_protein1,by=1,all = T)
prediction_matrix<-merge(NC_matrix,UK_protein2,by=1,all = T)
View(prediction_matrix)
prediction_matrix<-merge(NC_matrix,UK_protein1,by=1,all = T)
prediction_matrix<-merge(prediction_matrix,UK_protein2,by=1,all = T)
names(prediction_matrix)[1]<-"Majority.protein.IDs"
prediction_matrix[is.na(prediction_matrix)]<-0
discoPlot<-function(x){  ##x为矩阵
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,colSums(co[,42:ncol(co)]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co,tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-RAcor(prediction_matrix)
x<-x[,-1]
discoPlot2<-function(x){  ##x为矩阵
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,colSums(co[,42:ncol(co)]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co,tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
discoPlot2<-function(x){  ##x为矩阵
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,colSums(co[,42:ncol(co)]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co[,42:ncol(co)],tl.cex = 1.2, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
discoPlot2<-function(x){  ##x为矩阵
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,colSums(co[,42:ncol(co)]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co[,42:ncol(co)],tl.cex = 0.6, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
discoPlot2<-function(x){  ##x为矩阵
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,colSums(co[,42:ncol(co)]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co[,42:ncol(co)],tl.cex = 0.6, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.8,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
#calcualted the pearson's r
similar<-UK_RA[["corr"]]
View(similar)
similar[is.na(similar)==T]<-1
discoPlot2<-function(x){  ##x为矩阵
x<-x[,-1]
x<-x^0.5
co<-cor(x)
co[co[]<0]<-0
co<-co[1:41,]
b<-c(colSums(co[,1:41])-1,colSums(co[,42:ncol(co)]))
co[co[]==1]<-NA
for (i in 1:ncol(co)) {
co[,i]<-co[,i]/b[i]
co[,i]<-co[,i]*min(1/co[,i],na.rm = T)
}
co<-as.matrix(co)^2
col=colorRampPalette(c("white","orange","firebrick3"))
a<-corrplot(co,tl.cex = 0.6, col = col(200),na.label = "square",
na.label.col="grey",tl.col = "black",outline =F,addrect  = 0.5,is.corr = F)
return(a)
}
UK_RA<-discoPlot2(prediction_matrix)
#calcualted the pearson's r
similar<-UK_RA[["corr"]]
similar[is.na(similar)==T]<-1
similar<-cor(similar)
similar[similar[]<0]<-0
#calcualted the pearson's r
similar<-UK_RA[["corr"]]
similar[is.na(similar)==T]<-1
similar<-cor(similar)
View(similar)
Prsn_r<-Prsn_r[,42:ncol(Prsn_r)]
#calcualte the pearson's r
Prsn_r<-UK_RA[["corr"]]
Prsn_r[is.na(Prsn_r)==T]<-1
Prsn_r<-cor(Prsn_r,method = "pearson")
Prsn_r<-Prsn_r[,42:ncol(Prsn_r)]
View(Prsn_r)
library(psych)
p_test<-UK_RA[["corr"]]
p_test[is.na(p_test)==T]<-1
p_matrix<-corr.test(p_test)
m<-print(p_matrix$p, digits=4)
View(p_test)
View(p_matrix)
View(p_matrix)
p_matrix<-p_matrix$p
p_matrix<-p_matrix$p[,42:ncol(Prsn_r)]
p_matrix<-p_matrix[,42:ncol(p_matrix]
p_matrix<-p_matrix[,42:ncol(p_matrix)]
